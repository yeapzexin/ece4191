ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_ColorSensor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_ColorSensor_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_ColorSensor_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_ColorSensor_Enable, %function
  25              	PWM_ColorSensor_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_ColorSensor.c"
   1:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_ColorSensor.c **** * File Name: PWM_ColorSensor.c
   3:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
   5:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Description:
   6:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  15:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Note:
  16:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  17:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_ColorSensor.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_ColorSensor.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_ColorSensor.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  24:Generated_Source\PSoC5/PWM_ColorSensor.c **** #include "PWM_ColorSensor.h"
  25:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  26:Generated_Source\PSoC5/PWM_ColorSensor.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_ColorSensor.c **** #ifdef PWM_ColorSensor_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_ColorSensor.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* PWM_ColorSensor_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 2


  31:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  32:Generated_Source\PSoC5/PWM_ColorSensor.c **** uint8 PWM_ColorSensor_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  34:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  35:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Function Name: PWM_ColorSensor_Start
  37:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  39:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  44:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
  46:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  47:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Return:
  48:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
  49:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  50:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  PWM_ColorSensor_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_ColorSensor.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  54:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_ColorSensor.c **** void PWM_ColorSensor_Start(void) 
  56:Generated_Source\PSoC5/PWM_ColorSensor.c **** {
  57:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_ColorSensor.c ****     if(PWM_ColorSensor_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
  60:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_Init();
  61:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
  63:Generated_Source\PSoC5/PWM_ColorSensor.c ****     PWM_ColorSensor_Enable();
  64:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  65:Generated_Source\PSoC5/PWM_ColorSensor.c **** }
  66:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  67:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  68:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Function Name: PWM_ColorSensor_Init
  70:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  72:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  PWM_ColorSensor_Start().
  76:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  77:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
  79:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  80:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Return:
  81:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
  82:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
  83:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_ColorSensor.c **** void PWM_ColorSensor_Init(void) 
  85:Generated_Source\PSoC5/PWM_ColorSensor.c **** {
  86:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UsingFixedFunction || PWM_ColorSensor_UseControl)
  87:Generated_Source\PSoC5/PWM_ColorSensor.c ****         uint8 ctrl;
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 3


  88:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction || PWM_ColorSensor_UseControl) */
  89:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  90:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if(!PWM_ColorSensor_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(PWM_ColorSensor_UseStatus)
  92:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_ColorSensor.c ****             uint8 PWM_ColorSensor_interruptState;
  94:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UseStatus) */
  95:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (!PWM_ColorSensor_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
  97:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_CONTROL |= PWM_ColorSensor_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_CONTROL |= PWM_ColorSensor_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 104:Generated_Source\PSoC5/PWM_ColorSensor.c ****         ctrl = PWM_ColorSensor_CONTROL3 & ((uint8 )(~PWM_ColorSensor_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_CONTROL3 = ctrl | PWM_ColorSensor_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 107:Generated_Source\PSoC5/PWM_ColorSensor.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_RT1 &= ((uint8)(~PWM_ColorSensor_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_RT1 |= PWM_ColorSensor_SYNC;
 110:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 111:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_RT1 &= ((uint8)(~PWM_ColorSensor_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_RT1 |= PWM_ColorSensor_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 115:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #elif (PWM_ColorSensor_UseControl)
 116:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_ColorSensor.c ****         ctrl = PWM_ColorSensor_CONTROL & ((uint8)(~PWM_ColorSensor_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 ((uint8)(~PWM_ColorSensor_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_CONTROL = ctrl | PWM_ColorSensor_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                    PWM_ColorSensor_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 123:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (!PWM_ColorSensor_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_AUX_CONTROLDP0 |= (PWM_ColorSensor_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else /* (PWM_ColorSensor_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_AUX_CONTROLDP0 |= (PWM_ColorSensor_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_AUX_CONTROLDP1 |= (PWM_ColorSensor_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 133:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_WriteCounter(PWM_ColorSensor_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (!PWM_ColorSensor_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 136:Generated_Source\PSoC5/PWM_ColorSensor.c ****     PWM_ColorSensor_WritePeriod(PWM_ColorSensor_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 138:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_WriteCompare(PWM_ColorSensor_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 141:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_WriteCompare1(PWM_ColorSensor_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_WriteCompare2(PWM_ColorSensor_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 4


 145:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_WriteKillTime(PWM_ColorSensor_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 149:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_WriteDeadTime(PWM_ColorSensor_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 153:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UseStatus || PWM_ColorSensor_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_SetInterruptMode(PWM_ColorSensor_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UseStatus || PWM_ColorSensor_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 157:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_GLOBAL_ENABLE |= PWM_ColorSensor_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_CONTROL2 |= PWM_ColorSensor_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #else
 163:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(PWM_ColorSensor_UseStatus)
 164:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 165:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_STATUS_AUX_CTRL |= PWM_ColorSensor_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 171:Generated_Source\PSoC5/PWM_ColorSensor.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CyExitCriticalSection(PWM_ColorSensor_interruptState);
 173:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 174:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Clear the FIFO to enable the PWM_ColorSensor_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_ColorSensor.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UseStatus) */
 178:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_ColorSensor.c **** }
 180:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 181:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 182:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Function Name: PWM_ColorSensor_Enable
 184:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 186:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 189:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
 191:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 192:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Return:
 193:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
 194:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 195:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 198:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_ColorSensor.c **** void PWM_ColorSensor_Enable(void) 
 200:Generated_Source\PSoC5/PWM_ColorSensor.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_GLOBAL_ENABLE |= PWM_ColorSensor_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_GLOBAL_STBY_ENABLE |= PWM_ColorSensor_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 207:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UseControl || PWM_ColorSensor_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_CONTROL |= PWM_ColorSensor_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7D640040 		.word	1073767549
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_ColorSensor_Enable, .-PWM_ColorSensor_Enable
  46              		.section	.text.PWM_ColorSensor_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_ColorSensor_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_ColorSensor_Stop, %function
  52              	PWM_ColorSensor_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UseControl || PWM_ColorSensor_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_ColorSensor.c **** }
 212:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 213:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 214:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Function Name: PWM_ColorSensor_Stop
 216:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 218:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 222:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
 224:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 225:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Return:
 226:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
 227:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 228:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 232:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************/
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 6


 233:Generated_Source\PSoC5/PWM_ColorSensor.c **** void PWM_ColorSensor_Stop(void) 
 234:Generated_Source\PSoC5/PWM_ColorSensor.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UseControl || PWM_ColorSensor_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_CONTROL &= ((uint8)(~PWM_ColorSensor_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7D640040 		.word	1073767549
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_ColorSensor_Stop, .-PWM_ColorSensor_Stop
  72              		.section	.text.PWM_ColorSensor_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_ColorSensor_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_ColorSensor_WriteCounter, %function
  78              	PWM_ColorSensor_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UseControl || PWM_ColorSensor_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 239:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_GLOBAL_ENABLE &= ((uint8)(~PWM_ColorSensor_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_ColorSensor_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_ColorSensor.c **** }
 245:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 246:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 249:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 250:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Function Name: PWM_ColorSensor_SetCompareMode
 252:Generated_Source\PSoC5/PWM_ColorSensor.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 254:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 258:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 262:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  None
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 7


 264:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 265:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_ColorSensor.c ****         void PWM_ColorSensor_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_ColorSensor.c ****         {
 268:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #if(PWM_ColorSensor_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 270:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #if(0 != PWM_ColorSensor_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_ColorSensor.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_ColorSensor_CTRL_C
 272:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #else
 273:Generated_Source\PSoC5/PWM_ColorSensor.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #endif /* (0 != PWM_ColorSensor_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 276:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_CONTROL3 &= ((uint8)(~PWM_ColorSensor_CTRL_CMPMODE1_MASK)); /*Clear
 277:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 279:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #elif (PWM_ColorSensor_UseControl)
 280:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 281:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #if(0 != PWM_ColorSensor_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_ColorSensor.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_ColorSensor_CTRL_
 283:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                                 PWM_ColorSensor_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #else
 285:Generated_Source\PSoC5/PWM_ColorSensor.c ****                     uint8 comparemode1masked = comparemode & PWM_ColorSensor_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #endif /* (0 != PWM_ColorSensor_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 288:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #if(0 != PWM_ColorSensor_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_ColorSensor.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_ColorSensor_CTRL_
 290:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                                PWM_ColorSensor_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #else
 292:Generated_Source\PSoC5/PWM_ColorSensor.c ****                     uint8 comparemode2masked = comparemode & PWM_ColorSensor_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 #endif /* (0 != PWM_ColorSensor_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 295:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_CONTROL &= ((uint8)(~(PWM_ColorSensor_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                             PWM_ColorSensor_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 300:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #else
 301:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_ColorSensor.c ****         }
 304:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* PWM_ColorSensor_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 306:Generated_Source\PSoC5/PWM_ColorSensor.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 308:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 310:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 311:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Function Name: PWM_ColorSensor_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_ColorSensor.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 315:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 318:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 8


 321:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 322:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  None
 324:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 325:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_ColorSensor.c ****         void PWM_ColorSensor_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_ColorSensor.c ****         {
 328:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #if(0 != PWM_ColorSensor_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_ColorSensor_CTRL_CMPMO
 330:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                            PWM_ColorSensor_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #else
 332:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 uint8 comparemodemasked = comparemode & PWM_ColorSensor_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #endif /* (0 != PWM_ColorSensor_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 335:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #if (PWM_ColorSensor_UseControl)
 336:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_CONTROL &= ((uint8)(~PWM_ColorSensor_CTRL_CMPMODE1_MASK)); /*Clear 
 337:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #endif /* (PWM_ColorSensor_UseControl) */
 339:Generated_Source\PSoC5/PWM_ColorSensor.c ****         }
 340:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* PWM_ColorSensor_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 342:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 344:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 345:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 349:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 352:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 356:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 358:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 359:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 362:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 363:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(0 != PWM_ColorSensor_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_ColorSensor.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_ColorSensor_CTRL_CMPMODE2_
 365:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                                  PWM_ColorSensor_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 367:Generated_Source\PSoC5/PWM_ColorSensor.c ****             uint8 comparemodemasked = comparemode & PWM_ColorSensor_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (0 != PWM_ColorSensor_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 370:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_UseControl)
 371:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_CONTROL &= ((uint8)(~PWM_ColorSensor_CTRL_CMPMODE2_MASK)); /*Clear exis
 372:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UseControl) */
 374:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 375:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /*PWM_ColorSensor_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 377:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 9


 378:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 379:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 380:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (!PWM_ColorSensor_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 382:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 383:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_WriteCounter
 385:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 387:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 393:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 396:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 398:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 399:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 402:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                        
 405:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_ColorSensor.c ****         CY_SET_REG16(PWM_ColorSensor_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 1C680040 		.word	1073768476
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_ColorSensor_WriteCounter, .-PWM_ColorSensor_WriteCounter
  97              		.section	.text.PWM_ColorSensor_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_ColorSensor_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_ColorSensor_ReadCounter, %function
 103              	PWM_ColorSensor_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 408:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 409:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 10


 410:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadCounter
 412:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 414:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 418:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 420:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 421:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 424:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint16 PWM_ColorSensor_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_ColorSensor.c ****           (void)CY_GET_REG8(PWM_ColorSensor_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 432:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (CY_GET_REG16(PWM_ColorSensor_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 1E640040 		.word	1073767454
 123 0010 BC680040 		.word	1073768636
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	PWM_ColorSensor_ReadCounter, .-PWM_ColorSensor_ReadCounter
 127              		.section	.text.PWM_ColorSensor_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	PWM_ColorSensor_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	PWM_ColorSensor_WritePeriod, %function
 133              	PWM_ColorSensor_WritePeriod:
 134              	.LFB7:
 435:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 436:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UseStatus)
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 11


 437:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 438:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 439:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Function Name: PWM_ColorSensor_ClearFIFO
 441:Generated_Source\PSoC5/PWM_ColorSensor.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 443:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 446:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  None
 448:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 449:Generated_Source\PSoC5/PWM_ColorSensor.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *  None
 451:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *
 452:Generated_Source\PSoC5/PWM_ColorSensor.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_ColorSensor.c ****         void PWM_ColorSensor_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_ColorSensor.c ****         {
 455:Generated_Source\PSoC5/PWM_ColorSensor.c ****             while(0u != (PWM_ColorSensor_ReadStatusRegister() & PWM_ColorSensor_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_ColorSensor.c ****             {
 457:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 (void)PWM_ColorSensor_ReadCapture();
 458:Generated_Source\PSoC5/PWM_ColorSensor.c ****             }
 459:Generated_Source\PSoC5/PWM_ColorSensor.c ****         }
 460:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 461:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* PWM_ColorSensor_UseStatus */
 462:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 463:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* !PWM_ColorSensor_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 465:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 466:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Function Name: PWM_ColorSensor_WritePeriod
 468:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 470:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 474:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_ColorSensor.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 478:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Return:
 479:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
 480:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 481:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_ColorSensor.c **** void PWM_ColorSensor_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_ColorSensor.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if(PWM_ColorSensor_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_ColorSensor.c ****         CY_SET_REG16(PWM_ColorSensor_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #else
 487:Generated_Source\PSoC5/PWM_ColorSensor.c ****         CY_SET_REG16(PWM_ColorSensor_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 9C680040 		.word	1073768604
 149              		.cfi_endproc
 150              	.LFE7:
 151              		.size	PWM_ColorSensor_WritePeriod, .-PWM_ColorSensor_WritePeriod
 152              		.section	.text.PWM_ColorSensor_WriteCompare,"ax",%progbits
 153              		.align	2
 154              		.global	PWM_ColorSensor_WriteCompare
 155              		.thumb
 156              		.thumb_func
 157              		.type	PWM_ColorSensor_WriteCompare, %function
 158              	PWM_ColorSensor_WriteCompare:
 159              	.LFB8:
 488:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_ColorSensor.c **** }
 490:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 491:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 493:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 494:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_WriteCompare
 496:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 498:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 505:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 508:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 510:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 511:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 515:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                        
 518:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 160              		.loc 1 518 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 519:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(PWM_ColorSensor_UsingFixedFunction)
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 13


 520:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 522:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 522 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 5C680040 		.word	1073768540
 174              		.cfi_endproc
 175              	.LFE8:
 176              		.size	PWM_ColorSensor_WriteCompare, .-PWM_ColorSensor_WriteCompare
 177              		.section	.text.PWM_ColorSensor_SetInterruptMode,"ax",%progbits
 178              		.align	2
 179              		.global	PWM_ColorSensor_SetInterruptMode
 180              		.thumb
 181              		.thumb_func
 182              		.type	PWM_ColorSensor_SetInterruptMode, %function
 183              	PWM_ColorSensor_SetInterruptMode:
 184              	.LFB9:
 523:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 525:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if (PWM_ColorSensor_PWMMode == PWM_ColorSensor__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #if(PWM_ColorSensor_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 CY_SET_REG16(PWM_ColorSensor_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #else
 529:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 CY_SET_REG16(PWM_ColorSensor_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_PWMMode == PWM_ColorSensor__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 533:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 534:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 535:Generated_Source\PSoC5/PWM_ColorSensor.c **** #else
 536:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 537:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 538:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_WriteCompare1
 540:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 542:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 548:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 551:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 553:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 554:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                         
 557:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 14


 558:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(PWM_ColorSensor_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 561:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 564:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 565:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 566:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_WriteCompare2
 568:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 570:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 577:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 580:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 582:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 583:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                         
 586:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 587:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(PWM_ColorSensor_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG16(PWM_ColorSensor_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 590:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG16(PWM_ColorSensor_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 593:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 595:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 597:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 598:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 602:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 605:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 608:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 610:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 611:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 614:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* If using the Dead Band 1-255 mode then just write the register */
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 15


 615:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(!PWM_ColorSensor_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_ColorSensor.c ****             CY_SET_REG8(PWM_ColorSensor_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 618:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_DEADBAND_COUNT &= ((uint8)(~PWM_ColorSensor_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 622:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #if(PWM_ColorSensor_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_ColorSensor_DEADB
 625:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                                     PWM_ColorSensor_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #else
 627:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 PWM_ColorSensor_DEADBAND_COUNT |= deadtime & PWM_ColorSensor_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #endif /* (PWM_ColorSensor_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 630:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (!PWM_ColorSensor_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 632:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 633:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 634:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 638:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 641:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 643:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 644:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 647:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint8 PWM_ColorSensor_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 650:Generated_Source\PSoC5/PWM_ColorSensor.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(!PWM_ColorSensor_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_ColorSensor.c ****             return (CY_GET_REG8(PWM_ColorSensor_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 654:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 655:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #if(PWM_ColorSensor_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 return ((uint8)(((uint8)(PWM_ColorSensor_DEADBAND_COUNT & PWM_ColorSensor_DEADBAND_
 658:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                                                            PWM_ColorSensor_DEADBAND
 659:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #else
 660:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 return (PWM_ColorSensor_DEADBAND_COUNT & PWM_ColorSensor_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_ColorSensor.c ****             #endif /* (PWM_ColorSensor_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (!PWM_ColorSensor_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 664:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 666:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_UseStatus || PWM_ColorSensor_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 668:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 669:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 16


 672:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 673:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 677:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 680:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 682:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 683:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 185              		.loc 1 685 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL3:
 686:Generated_Source\PSoC5/PWM_ColorSensor.c ****         CY_SET_REG8(PWM_ColorSensor_STATUS_MASK_PTR, interruptMode);
 191              		.loc 1 686 0
 192 0000 014B     		ldr	r3, .L20
 193 0002 1870     		strb	r0, [r3]
 194 0004 7047     		bx	lr
 195              	.L21:
 196 0006 00BF     		.align	2
 197              	.L20:
 198 0008 8C640040 		.word	1073767564
 199              		.cfi_endproc
 200              	.LFE9:
 201              		.size	PWM_ColorSensor_SetInterruptMode, .-PWM_ColorSensor_SetInterruptMode
 202              		.section	.text.PWM_ColorSensor_ReadStatusRegister,"ax",%progbits
 203              		.align	2
 204              		.global	PWM_ColorSensor_ReadStatusRegister
 205              		.thumb
 206              		.thumb_func
 207              		.type	PWM_ColorSensor_ReadStatusRegister, %function
 208              	PWM_ColorSensor_ReadStatusRegister:
 209              	.LFB10:
 687:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 688:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 689:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 690:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 694:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 697:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 699:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 700:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [5]   : Kill event output
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 17


 704:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 710:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint8 PWM_ColorSensor_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 210              		.loc 1 712 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (CY_GET_REG8(PWM_ColorSensor_STATUS_PTR));
 215              		.loc 1 713 0
 216 0000 014B     		ldr	r3, .L23
 217 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 218              		.loc 1 714 0
 219 0004 7047     		bx	lr
 220              	.L24:
 221 0006 00BF     		.align	2
 222              	.L23:
 223 0008 6C640040 		.word	1073767532
 224              		.cfi_endproc
 225              	.LFE10:
 226              		.size	PWM_ColorSensor_ReadStatusRegister, .-PWM_ColorSensor_ReadStatusRegister
 227              		.section	.text.PWM_ColorSensor_ReadControlRegister,"ax",%progbits
 228              		.align	2
 229              		.global	PWM_ColorSensor_ReadControlRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	PWM_ColorSensor_ReadControlRegister, %function
 233              	PWM_ColorSensor_ReadControlRegister:
 234              	.LFB11:
 715:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 716:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* (PWM_ColorSensor_UseStatus || PWM_ColorSensor_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 718:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 719:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_UseControl)
 720:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 721:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 722:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 726:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 730:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 732:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 733:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 18


 736:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint8 PWM_ColorSensor_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 235              		.loc 1 738 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_ColorSensor.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 741:Generated_Source\PSoC5/PWM_ColorSensor.c ****         result = CY_GET_REG8(PWM_ColorSensor_CONTROL_PTR);
 240              		.loc 1 741 0
 241 0000 014B     		ldr	r3, .L26
 242 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 243              	.LVL4:
 742:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 244              		.loc 1 743 0
 245 0004 7047     		bx	lr
 246              	.L27:
 247 0006 00BF     		.align	2
 248              	.L26:
 249 0008 7D640040 		.word	1073767549
 250              		.cfi_endproc
 251              	.LFE11:
 252              		.size	PWM_ColorSensor_ReadControlRegister, .-PWM_ColorSensor_ReadControlRegister
 253              		.section	.text.PWM_ColorSensor_WriteControlRegister,"ax",%progbits
 254              		.align	2
 255              		.global	PWM_ColorSensor_WriteControlRegister
 256              		.thumb
 257              		.thumb_func
 258              		.type	PWM_ColorSensor_WriteControlRegister, %function
 259              	PWM_ColorSensor_WriteControlRegister:
 260              	.LFB12:
 744:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 745:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 746:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 750:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 754:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 761:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 763:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 764:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_ColorSensor.c ****     void PWM_ColorSensor_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 19


 261              		.loc 1 766 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL5:
 767:Generated_Source\PSoC5/PWM_ColorSensor.c ****         CY_SET_REG8(PWM_ColorSensor_CONTROL_PTR, control);
 267              		.loc 1 767 0
 268 0000 014B     		ldr	r3, .L29
 269 0002 1870     		strb	r0, [r3]
 270 0004 7047     		bx	lr
 271              	.L30:
 272 0006 00BF     		.align	2
 273              	.L29:
 274 0008 7D640040 		.word	1073767549
 275              		.cfi_endproc
 276              	.LFE12:
 277              		.size	PWM_ColorSensor_WriteControlRegister, .-PWM_ColorSensor_WriteControlRegister
 278              		.section	.text.PWM_ColorSensor_ReadCapture,"ax",%progbits
 279              		.align	2
 280              		.global	PWM_ColorSensor_ReadCapture
 281              		.thumb
 282              		.thumb_func
 283              		.type	PWM_ColorSensor_ReadCapture, %function
 284              	PWM_ColorSensor_ReadCapture:
 285              	.LFB13:
 768:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 769:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 770:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* (PWM_ColorSensor_UseControl) */
 771:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 772:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 773:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (!PWM_ColorSensor_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 775:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 776:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadCapture
 778:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 780:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 783:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 785:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 786:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 789:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint16 PWM_ColorSensor_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 286              		.loc 1 791 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (CY_GET_REG16(PWM_ColorSensor_CAPTURE_LSB_PTR));
 291              		.loc 1 792 0
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 20


 292 0000 014B     		ldr	r3, .L32
 293 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 294              		.loc 1 793 0
 295 0004 80B2     		uxth	r0, r0
 296 0006 7047     		bx	lr
 297              	.L33:
 298              		.align	2
 299              	.L32:
 300 0008 BC680040 		.word	1073768636
 301              		.cfi_endproc
 302              	.LFE13:
 303              		.size	PWM_ColorSensor_ReadCapture, .-PWM_ColorSensor_ReadCapture
 304              		.section	.text.PWM_ColorSensor_ClearFIFO,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_ColorSensor_ClearFIFO
 307              		.thumb
 308              		.thumb_func
 309              		.type	PWM_ColorSensor_ClearFIFO, %function
 310              	PWM_ColorSensor_ClearFIFO:
 311              	.LFB6:
 454:Generated_Source\PSoC5/PWM_ColorSensor.c ****             while(0u != (PWM_ColorSensor_ReadStatusRegister() & PWM_ColorSensor_STATUS_FIFONEMPTY))
 312              		.loc 1 454 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/PWM_ColorSensor.c ****             {
 320              		.loc 1 455 0
 321 0002 01E0     		b	.L35
 322              	.L36:
 457:Generated_Source\PSoC5/PWM_ColorSensor.c ****             }
 323              		.loc 1 457 0
 324 0004 FFF7FEFF 		bl	PWM_ColorSensor_ReadCapture
 325              	.LVL6:
 326              	.L35:
 455:Generated_Source\PSoC5/PWM_ColorSensor.c ****             {
 327              		.loc 1 455 0
 328 0008 FFF7FEFF 		bl	PWM_ColorSensor_ReadStatusRegister
 329              	.LVL7:
 330 000c 10F0100F 		tst	r0, #16
 331 0010 F8D1     		bne	.L36
 459:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 332              		.loc 1 459 0
 333 0012 08BD     		pop	{r3, pc}
 334              		.cfi_endproc
 335              	.LFE6:
 336              		.size	PWM_ColorSensor_ClearFIFO, .-PWM_ColorSensor_ClearFIFO
 337              		.section	.text.PWM_ColorSensor_Init,"ax",%progbits
 338              		.align	2
 339              		.global	PWM_ColorSensor_Init
 340              		.thumb
 341              		.thumb_func
 342              		.type	PWM_ColorSensor_Init, %function
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 21


 343              	PWM_ColorSensor_Init:
 344              	.LFB1:
  85:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if (PWM_ColorSensor_UsingFixedFunction || PWM_ColorSensor_UseControl)
 345              		.loc 1 85 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 08B5     		push	{r3, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_ColorSensor.c ****                 ((uint8)(~PWM_ColorSensor_CTRL_CMPMODE1_MASK));
 353              		.loc 1 117 0
 354 0002 164A     		ldr	r2, .L40
 355 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 356 0006 03F0C003 		and	r3, r3, #192
 357              	.LVL8:
 119:Generated_Source\PSoC5/PWM_ColorSensor.c ****                                    PWM_ColorSensor_DEFAULT_COMPARE1_MODE;
 358              		.loc 1 119 0
 359 000a 43F00903 		orr	r3, r3, #9
 360              	.LVL9:
 361 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/PWM_ColorSensor.c ****             PWM_ColorSensor_AUX_CONTROLDP1 |= (PWM_ColorSensor_AUX_CTRL_FIFO0_CLR);
 362              		.loc 1 129 0
 363 0010 2132     		adds	r2, r2, #33
 364 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 365 0014 43F00103 		orr	r3, r3, #1
 366 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_Resolution == 8) */
 367              		.loc 1 130 0
 368 001a 0132     		adds	r2, r2, #1
 369 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 370 001e 43F00103 		orr	r3, r3, #1
 371 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (!PWM_ColorSensor_UsingFixedFunction) */
 372              		.loc 1 133 0
 373 0024 4CF24F30 		movw	r0, #49999
 374 0028 FFF7FEFF 		bl	PWM_ColorSensor_WriteCounter
 375              	.LVL10:
 136:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 376              		.loc 1 136 0
 377 002c 4CF24F30 		movw	r0, #49999
 378 0030 FFF7FEFF 		bl	PWM_ColorSensor_WritePeriod
 379              	.LVL11:
 139:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 380              		.loc 1 139 0
 381 0034 46F2A710 		movw	r0, #24999
 382 0038 FFF7FEFF 		bl	PWM_ColorSensor_WriteCompare
 383              	.LVL12:
 154:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UseStatus || PWM_ColorSensor_UsingFixedFunction) */
 384              		.loc 1 154 0
 385 003c 0120     		movs	r0, #1
 386 003e FFF7FEFF 		bl	PWM_ColorSensor_SetInterruptMode
 387              	.LVL13:
 167:Generated_Source\PSoC5/PWM_ColorSensor.c ****             /* Use the interrupt output of the status register for IRQ output */
 388              		.loc 1 167 0
 389 0042 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 22


 390              	.LVL14:
 169:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 391              		.loc 1 169 0
 392 0046 064A     		ldr	r2, .L40+4
 393 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 004a 43F01003 		orr	r3, r3, #16
 395 004e 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 396              		.loc 1 172 0
 397 0050 FFF7FEFF 		bl	CyExitCriticalSection
 398              	.LVL15:
 176:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UseStatus) */
 399              		.loc 1 176 0
 400 0054 FFF7FEFF 		bl	PWM_ColorSensor_ClearFIFO
 401              	.LVL16:
 402 0058 08BD     		pop	{r3, pc}
 403              	.L41:
 404 005a 00BF     		.align	2
 405              	.L40:
 406 005c 7D640040 		.word	1073767549
 407 0060 9C640040 		.word	1073767580
 408              		.cfi_endproc
 409              	.LFE1:
 410              		.size	PWM_ColorSensor_Init, .-PWM_ColorSensor_Init
 411              		.section	.text.PWM_ColorSensor_Start,"ax",%progbits
 412              		.align	2
 413              		.global	PWM_ColorSensor_Start
 414              		.thumb
 415              		.thumb_func
 416              		.type	PWM_ColorSensor_Start, %function
 417              	PWM_ColorSensor_Start:
 418              	.LFB0:
  56:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /* If not Initialized then initialize all required hardware and software */
 419              		.loc 1 56 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 08B5     		push	{r3, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 3, -8
 426              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 427              		.loc 1 58 0
 428 0002 054B     		ldr	r3, .L45
 429 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430 0006 23B9     		cbnz	r3, .L43
  60:Generated_Source\PSoC5/PWM_ColorSensor.c ****         PWM_ColorSensor_initVar = 1u;
 431              		.loc 1 60 0
 432 0008 FFF7FEFF 		bl	PWM_ColorSensor_Init
 433              	.LVL17:
  61:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 434              		.loc 1 61 0
 435 000c 0122     		movs	r2, #1
 436 000e 024B     		ldr	r3, .L45
 437 0010 1A70     		strb	r2, [r3]
 438              	.L43:
  63:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 23


 439              		.loc 1 63 0
 440 0012 FFF7FEFF 		bl	PWM_ColorSensor_Enable
 441              	.LVL18:
 442 0016 08BD     		pop	{r3, pc}
 443              	.L46:
 444              		.align	2
 445              	.L45:
 446 0018 00000000 		.word	.LANCHOR0
 447              		.cfi_endproc
 448              	.LFE0:
 449              		.size	PWM_ColorSensor_Start, .-PWM_ColorSensor_Start
 450              		.section	.text.PWM_ColorSensor_ReadCompare,"ax",%progbits
 451              		.align	2
 452              		.global	PWM_ColorSensor_ReadCompare
 453              		.thumb
 454              		.thumb_func
 455              		.type	PWM_ColorSensor_ReadCompare, %function
 456              	PWM_ColorSensor_ReadCompare:
 457              	.LFB14:
 794:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 795:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* (!PWM_ColorSensor_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 797:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 798:Generated_Source\PSoC5/PWM_ColorSensor.c **** #if (PWM_ColorSensor_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 800:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 801:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadCompare
 803:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 805:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 809:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 811:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 812:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 815:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint16 PWM_ColorSensor_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 458              		.loc 1 817 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 818:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #if(PWM_ColorSensor_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_ColorSensor.c ****             return ((uint16)CY_GET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #else
 821:Generated_Source\PSoC5/PWM_ColorSensor.c ****             return (CY_GET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR));
 463              		.loc 1 821 0
 464 0000 014B     		ldr	r3, .L48
 465 0002 1888     		ldrh	r0, [r3]
 822:Generated_Source\PSoC5/PWM_ColorSensor.c ****         #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 24


 466              		.loc 1 823 0
 467 0004 80B2     		uxth	r0, r0
 468 0006 7047     		bx	lr
 469              	.L49:
 470              		.align	2
 471              	.L48:
 472 0008 5C680040 		.word	1073768540
 473              		.cfi_endproc
 474              	.LFE14:
 475              		.size	PWM_ColorSensor_ReadCompare, .-PWM_ColorSensor_ReadCompare
 476              		.section	.text.PWM_ColorSensor_ReadPeriod,"ax",%progbits
 477              		.align	2
 478              		.global	PWM_ColorSensor_ReadPeriod
 479              		.thumb
 480              		.thumb_func
 481              		.type	PWM_ColorSensor_ReadPeriod, %function
 482              	PWM_ColorSensor_ReadPeriod:
 483              	.LFB15:
 824:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 825:Generated_Source\PSoC5/PWM_ColorSensor.c **** #else
 826:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 827:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 828:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadCompare1
 830:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 832:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 835:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 837:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 838:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 841:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint16 PWM_ColorSensor_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 844:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (CY_GET_REG16(PWM_ColorSensor_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 846:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 847:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 848:Generated_Source\PSoC5/PWM_ColorSensor.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Function Name: PWM_ColorSensor_ReadCompare2
 850:Generated_Source\PSoC5/PWM_ColorSensor.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 852:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 855:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  None
 857:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 858:Generated_Source\PSoC5/PWM_ColorSensor.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *
 861:Generated_Source\PSoC5/PWM_ColorSensor.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_ColorSensor.c ****     uint16 PWM_ColorSensor_ReadCompare2(void) 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 25


 863:Generated_Source\PSoC5/PWM_ColorSensor.c ****     {
 864:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (CY_GET_REG16(PWM_ColorSensor_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_ColorSensor.c ****     }
 866:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 867:Generated_Source\PSoC5/PWM_ColorSensor.c **** #endif /* (PWM_ColorSensor_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 869:Generated_Source\PSoC5/PWM_ColorSensor.c **** 
 870:Generated_Source\PSoC5/PWM_ColorSensor.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Function Name: PWM_ColorSensor_ReadPeriod
 872:Generated_Source\PSoC5/PWM_ColorSensor.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 874:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 877:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  None
 879:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 880:Generated_Source\PSoC5/PWM_ColorSensor.c **** * Return:
 881:Generated_Source\PSoC5/PWM_ColorSensor.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_ColorSensor.c **** *
 883:Generated_Source\PSoC5/PWM_ColorSensor.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_ColorSensor.c **** uint16 PWM_ColorSensor_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_ColorSensor.c **** {
 484              		.loc 1 885 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #if(PWM_ColorSensor_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return ((uint16)CY_GET_REG16(PWM_ColorSensor_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #else
 889:Generated_Source\PSoC5/PWM_ColorSensor.c ****         return (CY_GET_REG16(PWM_ColorSensor_PERIOD_LSB_PTR));
 489              		.loc 1 889 0
 490 0000 014B     		ldr	r3, .L51
 491 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/PWM_ColorSensor.c ****     #endif /* (PWM_ColorSensor_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_ColorSensor.c **** }
 492              		.loc 1 891 0
 493 0004 80B2     		uxth	r0, r0
 494 0006 7047     		bx	lr
 495              	.L52:
 496              		.align	2
 497              	.L51:
 498 0008 9C680040 		.word	1073768604
 499              		.cfi_endproc
 500              	.LFE15:
 501              		.size	PWM_ColorSensor_ReadPeriod, .-PWM_ColorSensor_ReadPeriod
 502              		.global	PWM_ColorSensor_initVar
 503              		.bss
 504              		.set	.LANCHOR0,. + 0
 505              		.type	PWM_ColorSensor_initVar, %object
 506              		.size	PWM_ColorSensor_initVar, 1
 507              	PWM_ColorSensor_initVar:
 508 0000 00       		.space	1
 509              		.text
 510              	.Letext0:
 511              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 26


 512              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 513              		.section	.debug_info,"",%progbits
 514              	.Ldebug_info0:
 515 0000 50030000 		.4byte	0x350
 516 0004 0400     		.2byte	0x4
 517 0006 00000000 		.4byte	.Ldebug_abbrev0
 518 000a 04       		.byte	0x4
 519 000b 01       		.uleb128 0x1
 520 000c E6000000 		.4byte	.LASF43
 521 0010 0C       		.byte	0xc
 522 0011 55020000 		.4byte	.LASF44
 523 0015 0E030000 		.4byte	.LASF45
 524 0019 00000000 		.4byte	.Ldebug_ranges0+0
 525 001d 00000000 		.4byte	0
 526 0021 00000000 		.4byte	.Ldebug_line0
 527 0025 02       		.uleb128 0x2
 528 0026 01       		.byte	0x1
 529 0027 06       		.byte	0x6
 530 0028 F4030000 		.4byte	.LASF0
 531 002c 02       		.uleb128 0x2
 532 002d 01       		.byte	0x1
 533 002e 08       		.byte	0x8
 534 002f D8000000 		.4byte	.LASF1
 535 0033 02       		.uleb128 0x2
 536 0034 02       		.byte	0x2
 537 0035 05       		.byte	0x5
 538 0036 A1030000 		.4byte	.LASF2
 539 003a 02       		.uleb128 0x2
 540 003b 02       		.byte	0x2
 541 003c 07       		.byte	0x7
 542 003d 34000000 		.4byte	.LASF3
 543 0041 02       		.uleb128 0x2
 544 0042 04       		.byte	0x4
 545 0043 05       		.byte	0x5
 546 0044 AB030000 		.4byte	.LASF4
 547 0048 02       		.uleb128 0x2
 548 0049 04       		.byte	0x4
 549 004a 07       		.byte	0x7
 550 004b 79010000 		.4byte	.LASF5
 551 004f 02       		.uleb128 0x2
 552 0050 08       		.byte	0x8
 553 0051 05       		.byte	0x5
 554 0052 85030000 		.4byte	.LASF6
 555 0056 02       		.uleb128 0x2
 556 0057 08       		.byte	0x8
 557 0058 07       		.byte	0x7
 558 0059 9C000000 		.4byte	.LASF7
 559 005d 03       		.uleb128 0x3
 560 005e 04       		.byte	0x4
 561 005f 05       		.byte	0x5
 562 0060 696E7400 		.ascii	"int\000"
 563 0064 02       		.uleb128 0x2
 564 0065 04       		.byte	0x4
 565 0066 07       		.byte	0x7
 566 0067 B2020000 		.4byte	.LASF8
 567 006b 04       		.uleb128 0x4
 568 006c 8B010000 		.4byte	.LASF9
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 27


 569 0070 02       		.byte	0x2
 570 0071 E801     		.2byte	0x1e8
 571 0073 2C000000 		.4byte	0x2c
 572 0077 04       		.uleb128 0x4
 573 0078 4E020000 		.4byte	.LASF10
 574 007c 02       		.byte	0x2
 575 007d E901     		.2byte	0x1e9
 576 007f 3A000000 		.4byte	0x3a
 577 0083 02       		.uleb128 0x2
 578 0084 04       		.byte	0x4
 579 0085 04       		.byte	0x4
 580 0086 8E000000 		.4byte	.LASF11
 581 008a 02       		.uleb128 0x2
 582 008b 08       		.byte	0x8
 583 008c 04       		.byte	0x4
 584 008d 0A020000 		.4byte	.LASF12
 585 0091 02       		.uleb128 0x2
 586 0092 01       		.byte	0x1
 587 0093 08       		.byte	0x8
 588 0094 06000000 		.4byte	.LASF13
 589 0098 04       		.uleb128 0x4
 590 0099 74010000 		.4byte	.LASF14
 591 009d 02       		.byte	0x2
 592 009e 9202     		.2byte	0x292
 593 00a0 A4000000 		.4byte	0xa4
 594 00a4 05       		.uleb128 0x5
 595 00a5 6B000000 		.4byte	0x6b
 596 00a9 04       		.uleb128 0x4
 597 00aa 00000000 		.4byte	.LASF15
 598 00ae 02       		.byte	0x2
 599 00af 9302     		.2byte	0x293
 600 00b1 B5000000 		.4byte	0xb5
 601 00b5 05       		.uleb128 0x5
 602 00b6 77000000 		.4byte	0x77
 603 00ba 02       		.uleb128 0x2
 604 00bb 08       		.byte	0x8
 605 00bc 04       		.byte	0x4
 606 00bd E8030000 		.4byte	.LASF16
 607 00c1 02       		.uleb128 0x2
 608 00c2 04       		.byte	0x4
 609 00c3 07       		.byte	0x7
 610 00c4 7C030000 		.4byte	.LASF17
 611 00c8 06       		.uleb128 0x6
 612 00c9 B4030000 		.4byte	.LASF18
 613 00cd 01       		.byte	0x1
 614 00ce C7       		.byte	0xc7
 615 00cf 00000000 		.4byte	.LFB2
 616 00d3 10000000 		.4byte	.LFE2-.LFB2
 617 00d7 01       		.uleb128 0x1
 618 00d8 9C       		.byte	0x9c
 619 00d9 06       		.uleb128 0x6
 620 00da BF020000 		.4byte	.LASF19
 621 00de 01       		.byte	0x1
 622 00df E9       		.byte	0xe9
 623 00e0 00000000 		.4byte	.LFB3
 624 00e4 10000000 		.4byte	.LFE3-.LFB3
 625 00e8 01       		.uleb128 0x1
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 28


 626 00e9 9C       		.byte	0x9c
 627 00ea 07       		.uleb128 0x7
 628 00eb CB030000 		.4byte	.LASF20
 629 00ef 01       		.byte	0x1
 630 00f0 9301     		.2byte	0x193
 631 00f2 00000000 		.4byte	.LFB4
 632 00f6 0C000000 		.4byte	.LFE4-.LFB4
 633 00fa 01       		.uleb128 0x1
 634 00fb 9C       		.byte	0x9c
 635 00fc 0F010000 		.4byte	0x10f
 636 0100 08       		.uleb128 0x8
 637 0101 94000000 		.4byte	.LASF22
 638 0105 01       		.byte	0x1
 639 0106 9301     		.2byte	0x193
 640 0108 77000000 		.4byte	0x77
 641 010c 01       		.uleb128 0x1
 642 010d 50       		.byte	0x50
 643 010e 00       		.byte	0
 644 010f 09       		.uleb128 0x9
 645 0110 32020000 		.4byte	.LASF28
 646 0114 01       		.byte	0x1
 647 0115 A901     		.2byte	0x1a9
 648 0117 77000000 		.4byte	0x77
 649 011b 00000000 		.4byte	.LFB5
 650 011f 14000000 		.4byte	.LFE5-.LFB5
 651 0123 01       		.uleb128 0x1
 652 0124 9C       		.byte	0x9c
 653 0125 07       		.uleb128 0x7
 654 0126 60030000 		.4byte	.LASF21
 655 012a 01       		.byte	0x1
 656 012b E201     		.2byte	0x1e2
 657 012d 00000000 		.4byte	.LFB7
 658 0131 0C000000 		.4byte	.LFE7-.LFB7
 659 0135 01       		.uleb128 0x1
 660 0136 9C       		.byte	0x9c
 661 0137 4A010000 		.4byte	0x14a
 662 013b 08       		.uleb128 0x8
 663 013c 2D000000 		.4byte	.LASF23
 664 0140 01       		.byte	0x1
 665 0141 E201     		.2byte	0x1e2
 666 0143 77000000 		.4byte	0x77
 667 0147 01       		.uleb128 0x1
 668 0148 50       		.byte	0x50
 669 0149 00       		.byte	0
 670 014a 07       		.uleb128 0x7
 671 014b 7E020000 		.4byte	.LASF24
 672 014f 01       		.byte	0x1
 673 0150 0402     		.2byte	0x204
 674 0152 00000000 		.4byte	.LFB8
 675 0156 0C000000 		.4byte	.LFE8-.LFB8
 676 015a 01       		.uleb128 0x1
 677 015b 9C       		.byte	0x9c
 678 015c 6F010000 		.4byte	0x16f
 679 0160 08       		.uleb128 0x8
 680 0161 00040000 		.4byte	.LASF25
 681 0165 01       		.byte	0x1
 682 0166 0402     		.2byte	0x204
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 29


 683 0168 77000000 		.4byte	0x77
 684 016c 01       		.uleb128 0x1
 685 016d 50       		.byte	0x50
 686 016e 00       		.byte	0
 687 016f 07       		.uleb128 0x7
 688 0170 11020000 		.4byte	.LASF26
 689 0174 01       		.byte	0x1
 690 0175 AC02     		.2byte	0x2ac
 691 0177 00000000 		.4byte	.LFB9
 692 017b 0C000000 		.4byte	.LFE9-.LFB9
 693 017f 01       		.uleb128 0x1
 694 0180 9C       		.byte	0x9c
 695 0181 94010000 		.4byte	0x194
 696 0185 08       		.uleb128 0x8
 697 0186 93030000 		.4byte	.LASF27
 698 018a 01       		.byte	0x1
 699 018b AC02     		.2byte	0x2ac
 700 018d 6B000000 		.4byte	0x6b
 701 0191 01       		.uleb128 0x1
 702 0192 50       		.byte	0x50
 703 0193 00       		.byte	0
 704 0194 09       		.uleb128 0x9
 705 0195 E7010000 		.4byte	.LASF29
 706 0199 01       		.byte	0x1
 707 019a C702     		.2byte	0x2c7
 708 019c 6B000000 		.4byte	0x6b
 709 01a0 00000000 		.4byte	.LFB10
 710 01a4 0C000000 		.4byte	.LFE10-.LFB10
 711 01a8 01       		.uleb128 0x1
 712 01a9 9C       		.byte	0x9c
 713 01aa 0A       		.uleb128 0xa
 714 01ab EA020000 		.4byte	.LASF46
 715 01af 01       		.byte	0x1
 716 01b0 E102     		.2byte	0x2e1
 717 01b2 6B000000 		.4byte	0x6b
 718 01b6 00000000 		.4byte	.LFB11
 719 01ba 0C000000 		.4byte	.LFE11-.LFB11
 720 01be 01       		.uleb128 0x1
 721 01bf 9C       		.byte	0x9c
 722 01c0 D3010000 		.4byte	0x1d3
 723 01c4 0B       		.uleb128 0xb
 724 01c5 0B000000 		.4byte	.LASF35
 725 01c9 01       		.byte	0x1
 726 01ca E302     		.2byte	0x2e3
 727 01cc 6B000000 		.4byte	0x6b
 728 01d0 01       		.uleb128 0x1
 729 01d1 50       		.byte	0x50
 730 01d2 00       		.byte	0
 731 01d3 07       		.uleb128 0x7
 732 01d4 B3000000 		.4byte	.LASF30
 733 01d8 01       		.byte	0x1
 734 01d9 FD02     		.2byte	0x2fd
 735 01db 00000000 		.4byte	.LFB12
 736 01df 0C000000 		.4byte	.LFE12-.LFB12
 737 01e3 01       		.uleb128 0x1
 738 01e4 9C       		.byte	0x9c
 739 01e5 F8010000 		.4byte	0x1f8
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 30


 740 01e9 08       		.uleb128 0x8
 741 01ea 91010000 		.4byte	.LASF31
 742 01ee 01       		.byte	0x1
 743 01ef FD02     		.2byte	0x2fd
 744 01f1 6B000000 		.4byte	0x6b
 745 01f5 01       		.uleb128 0x1
 746 01f6 50       		.byte	0x50
 747 01f7 00       		.byte	0
 748 01f8 09       		.uleb128 0x9
 749 01f9 47000000 		.4byte	.LASF32
 750 01fd 01       		.byte	0x1
 751 01fe 1603     		.2byte	0x316
 752 0200 77000000 		.4byte	0x77
 753 0204 00000000 		.4byte	.LFB13
 754 0208 0C000000 		.4byte	.LFE13-.LFB13
 755 020c 01       		.uleb128 0x1
 756 020d 9C       		.byte	0x9c
 757 020e 07       		.uleb128 0x7
 758 020f 99010000 		.4byte	.LASF33
 759 0213 01       		.byte	0x1
 760 0214 C501     		.2byte	0x1c5
 761 0216 00000000 		.4byte	.LFB6
 762 021a 14000000 		.4byte	.LFE6-.LFB6
 763 021e 01       		.uleb128 0x1
 764 021f 9C       		.byte	0x9c
 765 0220 37020000 		.4byte	0x237
 766 0224 0C       		.uleb128 0xc
 767 0225 08000000 		.4byte	.LVL6
 768 0229 F8010000 		.4byte	0x1f8
 769 022d 0C       		.uleb128 0xc
 770 022e 0C000000 		.4byte	.LVL7
 771 0232 94010000 		.4byte	0x194
 772 0236 00       		.byte	0
 773 0237 0D       		.uleb128 0xd
 774 0238 79000000 		.4byte	.LASF34
 775 023c 01       		.byte	0x1
 776 023d 54       		.byte	0x54
 777 023e 00000000 		.4byte	.LFB1
 778 0242 64000000 		.4byte	.LFE1-.LFB1
 779 0246 01       		.uleb128 0x1
 780 0247 9C       		.byte	0x9c
 781 0248 D8020000 		.4byte	0x2d8
 782 024c 0E       		.uleb128 0xe
 783 024d 5B030000 		.4byte	.LASF36
 784 0251 01       		.byte	0x1
 785 0252 57       		.byte	0x57
 786 0253 6B000000 		.4byte	0x6b
 787 0257 00000000 		.4byte	.LLST0
 788 025b 0E       		.uleb128 0xe
 789 025c 08040000 		.4byte	.LASF37
 790 0260 01       		.byte	0x1
 791 0261 5D       		.byte	0x5d
 792 0262 6B000000 		.4byte	0x6b
 793 0266 13000000 		.4byte	.LLST1
 794 026a 0F       		.uleb128 0xf
 795 026b 2C000000 		.4byte	.LVL10
 796 026f EA000000 		.4byte	0xea
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 31


 797 0273 7F020000 		.4byte	0x27f
 798 0277 10       		.uleb128 0x10
 799 0278 01       		.uleb128 0x1
 800 0279 50       		.byte	0x50
 801 027a 03       		.uleb128 0x3
 802 027b 0B       		.byte	0xb
 803 027c 4FC3     		.2byte	0xc34f
 804 027e 00       		.byte	0
 805 027f 0F       		.uleb128 0xf
 806 0280 34000000 		.4byte	.LVL11
 807 0284 25010000 		.4byte	0x125
 808 0288 94020000 		.4byte	0x294
 809 028c 10       		.uleb128 0x10
 810 028d 01       		.uleb128 0x1
 811 028e 50       		.byte	0x50
 812 028f 03       		.uleb128 0x3
 813 0290 0B       		.byte	0xb
 814 0291 4FC3     		.2byte	0xc34f
 815 0293 00       		.byte	0
 816 0294 0F       		.uleb128 0xf
 817 0295 3C000000 		.4byte	.LVL12
 818 0299 4A010000 		.4byte	0x14a
 819 029d A9020000 		.4byte	0x2a9
 820 02a1 10       		.uleb128 0x10
 821 02a2 01       		.uleb128 0x1
 822 02a3 50       		.byte	0x50
 823 02a4 03       		.uleb128 0x3
 824 02a5 0A       		.byte	0xa
 825 02a6 A761     		.2byte	0x61a7
 826 02a8 00       		.byte	0
 827 02a9 0F       		.uleb128 0xf
 828 02aa 42000000 		.4byte	.LVL13
 829 02ae 6F010000 		.4byte	0x16f
 830 02b2 BC020000 		.4byte	0x2bc
 831 02b6 10       		.uleb128 0x10
 832 02b7 01       		.uleb128 0x1
 833 02b8 50       		.byte	0x50
 834 02b9 01       		.uleb128 0x1
 835 02ba 31       		.byte	0x31
 836 02bb 00       		.byte	0
 837 02bc 0C       		.uleb128 0xc
 838 02bd 46000000 		.4byte	.LVL14
 839 02c1 3D030000 		.4byte	0x33d
 840 02c5 0C       		.uleb128 0xc
 841 02c6 54000000 		.4byte	.LVL15
 842 02ca 48030000 		.4byte	0x348
 843 02ce 0C       		.uleb128 0xc
 844 02cf 58000000 		.4byte	.LVL16
 845 02d3 0E020000 		.4byte	0x20e
 846 02d7 00       		.byte	0
 847 02d8 0D       		.uleb128 0xd
 848 02d9 63000000 		.4byte	.LASF38
 849 02dd 01       		.byte	0x1
 850 02de 37       		.byte	0x37
 851 02df 00000000 		.4byte	.LFB0
 852 02e3 1C000000 		.4byte	.LFE0-.LFB0
 853 02e7 01       		.uleb128 0x1
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 32


 854 02e8 9C       		.byte	0x9c
 855 02e9 00030000 		.4byte	0x300
 856 02ed 0C       		.uleb128 0xc
 857 02ee 0C000000 		.4byte	.LVL17
 858 02f2 37020000 		.4byte	0x237
 859 02f6 0C       		.uleb128 0xc
 860 02f7 16000000 		.4byte	.LVL18
 861 02fb C8000000 		.4byte	0xc8
 862 02ff 00       		.byte	0
 863 0300 09       		.uleb128 0x9
 864 0301 CB010000 		.4byte	.LASF39
 865 0305 01       		.byte	0x1
 866 0306 3003     		.2byte	0x330
 867 0308 77000000 		.4byte	0x77
 868 030c 00000000 		.4byte	.LFB14
 869 0310 0C000000 		.4byte	.LFE14-.LFB14
 870 0314 01       		.uleb128 0x1
 871 0315 9C       		.byte	0x9c
 872 0316 09       		.uleb128 0x9
 873 0317 12000000 		.4byte	.LASF40
 874 031b 01       		.byte	0x1
 875 031c 7403     		.2byte	0x374
 876 031e 77000000 		.4byte	0x77
 877 0322 00000000 		.4byte	.LFB15
 878 0326 0C000000 		.4byte	.LFE15-.LFB15
 879 032a 01       		.uleb128 0x1
 880 032b 9C       		.byte	0x9c
 881 032c 11       		.uleb128 0x11
 882 032d B3010000 		.4byte	.LASF47
 883 0331 01       		.byte	0x1
 884 0332 20       		.byte	0x20
 885 0333 6B000000 		.4byte	0x6b
 886 0337 05       		.uleb128 0x5
 887 0338 03       		.byte	0x3
 888 0339 00000000 		.4byte	PWM_ColorSensor_initVar
 889 033d 12       		.uleb128 0x12
 890 033e 9B020000 		.4byte	.LASF41
 891 0342 9B020000 		.4byte	.LASF41
 892 0346 03       		.byte	0x3
 893 0347 7D       		.byte	0x7d
 894 0348 12       		.uleb128 0x12
 895 0349 D4020000 		.4byte	.LASF42
 896 034d D4020000 		.4byte	.LASF42
 897 0351 03       		.byte	0x3
 898 0352 7E       		.byte	0x7e
 899 0353 00       		.byte	0
 900              		.section	.debug_abbrev,"",%progbits
 901              	.Ldebug_abbrev0:
 902 0000 01       		.uleb128 0x1
 903 0001 11       		.uleb128 0x11
 904 0002 01       		.byte	0x1
 905 0003 25       		.uleb128 0x25
 906 0004 0E       		.uleb128 0xe
 907 0005 13       		.uleb128 0x13
 908 0006 0B       		.uleb128 0xb
 909 0007 03       		.uleb128 0x3
 910 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 33


 911 0009 1B       		.uleb128 0x1b
 912 000a 0E       		.uleb128 0xe
 913 000b 55       		.uleb128 0x55
 914 000c 17       		.uleb128 0x17
 915 000d 11       		.uleb128 0x11
 916 000e 01       		.uleb128 0x1
 917 000f 10       		.uleb128 0x10
 918 0010 17       		.uleb128 0x17
 919 0011 00       		.byte	0
 920 0012 00       		.byte	0
 921 0013 02       		.uleb128 0x2
 922 0014 24       		.uleb128 0x24
 923 0015 00       		.byte	0
 924 0016 0B       		.uleb128 0xb
 925 0017 0B       		.uleb128 0xb
 926 0018 3E       		.uleb128 0x3e
 927 0019 0B       		.uleb128 0xb
 928 001a 03       		.uleb128 0x3
 929 001b 0E       		.uleb128 0xe
 930 001c 00       		.byte	0
 931 001d 00       		.byte	0
 932 001e 03       		.uleb128 0x3
 933 001f 24       		.uleb128 0x24
 934 0020 00       		.byte	0
 935 0021 0B       		.uleb128 0xb
 936 0022 0B       		.uleb128 0xb
 937 0023 3E       		.uleb128 0x3e
 938 0024 0B       		.uleb128 0xb
 939 0025 03       		.uleb128 0x3
 940 0026 08       		.uleb128 0x8
 941 0027 00       		.byte	0
 942 0028 00       		.byte	0
 943 0029 04       		.uleb128 0x4
 944 002a 16       		.uleb128 0x16
 945 002b 00       		.byte	0
 946 002c 03       		.uleb128 0x3
 947 002d 0E       		.uleb128 0xe
 948 002e 3A       		.uleb128 0x3a
 949 002f 0B       		.uleb128 0xb
 950 0030 3B       		.uleb128 0x3b
 951 0031 05       		.uleb128 0x5
 952 0032 49       		.uleb128 0x49
 953 0033 13       		.uleb128 0x13
 954 0034 00       		.byte	0
 955 0035 00       		.byte	0
 956 0036 05       		.uleb128 0x5
 957 0037 35       		.uleb128 0x35
 958 0038 00       		.byte	0
 959 0039 49       		.uleb128 0x49
 960 003a 13       		.uleb128 0x13
 961 003b 00       		.byte	0
 962 003c 00       		.byte	0
 963 003d 06       		.uleb128 0x6
 964 003e 2E       		.uleb128 0x2e
 965 003f 00       		.byte	0
 966 0040 3F       		.uleb128 0x3f
 967 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 34


 968 0042 03       		.uleb128 0x3
 969 0043 0E       		.uleb128 0xe
 970 0044 3A       		.uleb128 0x3a
 971 0045 0B       		.uleb128 0xb
 972 0046 3B       		.uleb128 0x3b
 973 0047 0B       		.uleb128 0xb
 974 0048 27       		.uleb128 0x27
 975 0049 19       		.uleb128 0x19
 976 004a 11       		.uleb128 0x11
 977 004b 01       		.uleb128 0x1
 978 004c 12       		.uleb128 0x12
 979 004d 06       		.uleb128 0x6
 980 004e 40       		.uleb128 0x40
 981 004f 18       		.uleb128 0x18
 982 0050 9742     		.uleb128 0x2117
 983 0052 19       		.uleb128 0x19
 984 0053 00       		.byte	0
 985 0054 00       		.byte	0
 986 0055 07       		.uleb128 0x7
 987 0056 2E       		.uleb128 0x2e
 988 0057 01       		.byte	0x1
 989 0058 3F       		.uleb128 0x3f
 990 0059 19       		.uleb128 0x19
 991 005a 03       		.uleb128 0x3
 992 005b 0E       		.uleb128 0xe
 993 005c 3A       		.uleb128 0x3a
 994 005d 0B       		.uleb128 0xb
 995 005e 3B       		.uleb128 0x3b
 996 005f 05       		.uleb128 0x5
 997 0060 27       		.uleb128 0x27
 998 0061 19       		.uleb128 0x19
 999 0062 11       		.uleb128 0x11
 1000 0063 01       		.uleb128 0x1
 1001 0064 12       		.uleb128 0x12
 1002 0065 06       		.uleb128 0x6
 1003 0066 40       		.uleb128 0x40
 1004 0067 18       		.uleb128 0x18
 1005 0068 9742     		.uleb128 0x2117
 1006 006a 19       		.uleb128 0x19
 1007 006b 01       		.uleb128 0x1
 1008 006c 13       		.uleb128 0x13
 1009 006d 00       		.byte	0
 1010 006e 00       		.byte	0
 1011 006f 08       		.uleb128 0x8
 1012 0070 05       		.uleb128 0x5
 1013 0071 00       		.byte	0
 1014 0072 03       		.uleb128 0x3
 1015 0073 0E       		.uleb128 0xe
 1016 0074 3A       		.uleb128 0x3a
 1017 0075 0B       		.uleb128 0xb
 1018 0076 3B       		.uleb128 0x3b
 1019 0077 05       		.uleb128 0x5
 1020 0078 49       		.uleb128 0x49
 1021 0079 13       		.uleb128 0x13
 1022 007a 02       		.uleb128 0x2
 1023 007b 18       		.uleb128 0x18
 1024 007c 00       		.byte	0
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 35


 1025 007d 00       		.byte	0
 1026 007e 09       		.uleb128 0x9
 1027 007f 2E       		.uleb128 0x2e
 1028 0080 00       		.byte	0
 1029 0081 3F       		.uleb128 0x3f
 1030 0082 19       		.uleb128 0x19
 1031 0083 03       		.uleb128 0x3
 1032 0084 0E       		.uleb128 0xe
 1033 0085 3A       		.uleb128 0x3a
 1034 0086 0B       		.uleb128 0xb
 1035 0087 3B       		.uleb128 0x3b
 1036 0088 05       		.uleb128 0x5
 1037 0089 27       		.uleb128 0x27
 1038 008a 19       		.uleb128 0x19
 1039 008b 49       		.uleb128 0x49
 1040 008c 13       		.uleb128 0x13
 1041 008d 11       		.uleb128 0x11
 1042 008e 01       		.uleb128 0x1
 1043 008f 12       		.uleb128 0x12
 1044 0090 06       		.uleb128 0x6
 1045 0091 40       		.uleb128 0x40
 1046 0092 18       		.uleb128 0x18
 1047 0093 9742     		.uleb128 0x2117
 1048 0095 19       		.uleb128 0x19
 1049 0096 00       		.byte	0
 1050 0097 00       		.byte	0
 1051 0098 0A       		.uleb128 0xa
 1052 0099 2E       		.uleb128 0x2e
 1053 009a 01       		.byte	0x1
 1054 009b 3F       		.uleb128 0x3f
 1055 009c 19       		.uleb128 0x19
 1056 009d 03       		.uleb128 0x3
 1057 009e 0E       		.uleb128 0xe
 1058 009f 3A       		.uleb128 0x3a
 1059 00a0 0B       		.uleb128 0xb
 1060 00a1 3B       		.uleb128 0x3b
 1061 00a2 05       		.uleb128 0x5
 1062 00a3 27       		.uleb128 0x27
 1063 00a4 19       		.uleb128 0x19
 1064 00a5 49       		.uleb128 0x49
 1065 00a6 13       		.uleb128 0x13
 1066 00a7 11       		.uleb128 0x11
 1067 00a8 01       		.uleb128 0x1
 1068 00a9 12       		.uleb128 0x12
 1069 00aa 06       		.uleb128 0x6
 1070 00ab 40       		.uleb128 0x40
 1071 00ac 18       		.uleb128 0x18
 1072 00ad 9742     		.uleb128 0x2117
 1073 00af 19       		.uleb128 0x19
 1074 00b0 01       		.uleb128 0x1
 1075 00b1 13       		.uleb128 0x13
 1076 00b2 00       		.byte	0
 1077 00b3 00       		.byte	0
 1078 00b4 0B       		.uleb128 0xb
 1079 00b5 34       		.uleb128 0x34
 1080 00b6 00       		.byte	0
 1081 00b7 03       		.uleb128 0x3
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 36


 1082 00b8 0E       		.uleb128 0xe
 1083 00b9 3A       		.uleb128 0x3a
 1084 00ba 0B       		.uleb128 0xb
 1085 00bb 3B       		.uleb128 0x3b
 1086 00bc 05       		.uleb128 0x5
 1087 00bd 49       		.uleb128 0x49
 1088 00be 13       		.uleb128 0x13
 1089 00bf 02       		.uleb128 0x2
 1090 00c0 18       		.uleb128 0x18
 1091 00c1 00       		.byte	0
 1092 00c2 00       		.byte	0
 1093 00c3 0C       		.uleb128 0xc
 1094 00c4 898201   		.uleb128 0x4109
 1095 00c7 00       		.byte	0
 1096 00c8 11       		.uleb128 0x11
 1097 00c9 01       		.uleb128 0x1
 1098 00ca 31       		.uleb128 0x31
 1099 00cb 13       		.uleb128 0x13
 1100 00cc 00       		.byte	0
 1101 00cd 00       		.byte	0
 1102 00ce 0D       		.uleb128 0xd
 1103 00cf 2E       		.uleb128 0x2e
 1104 00d0 01       		.byte	0x1
 1105 00d1 3F       		.uleb128 0x3f
 1106 00d2 19       		.uleb128 0x19
 1107 00d3 03       		.uleb128 0x3
 1108 00d4 0E       		.uleb128 0xe
 1109 00d5 3A       		.uleb128 0x3a
 1110 00d6 0B       		.uleb128 0xb
 1111 00d7 3B       		.uleb128 0x3b
 1112 00d8 0B       		.uleb128 0xb
 1113 00d9 27       		.uleb128 0x27
 1114 00da 19       		.uleb128 0x19
 1115 00db 11       		.uleb128 0x11
 1116 00dc 01       		.uleb128 0x1
 1117 00dd 12       		.uleb128 0x12
 1118 00de 06       		.uleb128 0x6
 1119 00df 40       		.uleb128 0x40
 1120 00e0 18       		.uleb128 0x18
 1121 00e1 9742     		.uleb128 0x2117
 1122 00e3 19       		.uleb128 0x19
 1123 00e4 01       		.uleb128 0x1
 1124 00e5 13       		.uleb128 0x13
 1125 00e6 00       		.byte	0
 1126 00e7 00       		.byte	0
 1127 00e8 0E       		.uleb128 0xe
 1128 00e9 34       		.uleb128 0x34
 1129 00ea 00       		.byte	0
 1130 00eb 03       		.uleb128 0x3
 1131 00ec 0E       		.uleb128 0xe
 1132 00ed 3A       		.uleb128 0x3a
 1133 00ee 0B       		.uleb128 0xb
 1134 00ef 3B       		.uleb128 0x3b
 1135 00f0 0B       		.uleb128 0xb
 1136 00f1 49       		.uleb128 0x49
 1137 00f2 13       		.uleb128 0x13
 1138 00f3 02       		.uleb128 0x2
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 37


 1139 00f4 17       		.uleb128 0x17
 1140 00f5 00       		.byte	0
 1141 00f6 00       		.byte	0
 1142 00f7 0F       		.uleb128 0xf
 1143 00f8 898201   		.uleb128 0x4109
 1144 00fb 01       		.byte	0x1
 1145 00fc 11       		.uleb128 0x11
 1146 00fd 01       		.uleb128 0x1
 1147 00fe 31       		.uleb128 0x31
 1148 00ff 13       		.uleb128 0x13
 1149 0100 01       		.uleb128 0x1
 1150 0101 13       		.uleb128 0x13
 1151 0102 00       		.byte	0
 1152 0103 00       		.byte	0
 1153 0104 10       		.uleb128 0x10
 1154 0105 8A8201   		.uleb128 0x410a
 1155 0108 00       		.byte	0
 1156 0109 02       		.uleb128 0x2
 1157 010a 18       		.uleb128 0x18
 1158 010b 9142     		.uleb128 0x2111
 1159 010d 18       		.uleb128 0x18
 1160 010e 00       		.byte	0
 1161 010f 00       		.byte	0
 1162 0110 11       		.uleb128 0x11
 1163 0111 34       		.uleb128 0x34
 1164 0112 00       		.byte	0
 1165 0113 03       		.uleb128 0x3
 1166 0114 0E       		.uleb128 0xe
 1167 0115 3A       		.uleb128 0x3a
 1168 0116 0B       		.uleb128 0xb
 1169 0117 3B       		.uleb128 0x3b
 1170 0118 0B       		.uleb128 0xb
 1171 0119 49       		.uleb128 0x49
 1172 011a 13       		.uleb128 0x13
 1173 011b 3F       		.uleb128 0x3f
 1174 011c 19       		.uleb128 0x19
 1175 011d 02       		.uleb128 0x2
 1176 011e 18       		.uleb128 0x18
 1177 011f 00       		.byte	0
 1178 0120 00       		.byte	0
 1179 0121 12       		.uleb128 0x12
 1180 0122 2E       		.uleb128 0x2e
 1181 0123 00       		.byte	0
 1182 0124 3F       		.uleb128 0x3f
 1183 0125 19       		.uleb128 0x19
 1184 0126 3C       		.uleb128 0x3c
 1185 0127 19       		.uleb128 0x19
 1186 0128 6E       		.uleb128 0x6e
 1187 0129 0E       		.uleb128 0xe
 1188 012a 03       		.uleb128 0x3
 1189 012b 0E       		.uleb128 0xe
 1190 012c 3A       		.uleb128 0x3a
 1191 012d 0B       		.uleb128 0xb
 1192 012e 3B       		.uleb128 0x3b
 1193 012f 0B       		.uleb128 0xb
 1194 0130 00       		.byte	0
 1195 0131 00       		.byte	0
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 38


 1196 0132 00       		.byte	0
 1197              		.section	.debug_loc,"",%progbits
 1198              	.Ldebug_loc0:
 1199              	.LLST0:
 1200 0000 0A000000 		.4byte	.LVL8
 1201 0004 0E000000 		.4byte	.LVL9
 1202 0008 0100     		.2byte	0x1
 1203 000a 53       		.byte	0x53
 1204 000b 00000000 		.4byte	0
 1205 000f 00000000 		.4byte	0
 1206              	.LLST1:
 1207 0013 46000000 		.4byte	.LVL14
 1208 0017 53000000 		.4byte	.LVL15-1
 1209 001b 0100     		.2byte	0x1
 1210 001d 50       		.byte	0x50
 1211 001e 00000000 		.4byte	0
 1212 0022 00000000 		.4byte	0
 1213              		.section	.debug_aranges,"",%progbits
 1214 0000 94000000 		.4byte	0x94
 1215 0004 0200     		.2byte	0x2
 1216 0006 00000000 		.4byte	.Ldebug_info0
 1217 000a 04       		.byte	0x4
 1218 000b 00       		.byte	0
 1219 000c 0000     		.2byte	0
 1220 000e 0000     		.2byte	0
 1221 0010 00000000 		.4byte	.LFB2
 1222 0014 10000000 		.4byte	.LFE2-.LFB2
 1223 0018 00000000 		.4byte	.LFB3
 1224 001c 10000000 		.4byte	.LFE3-.LFB3
 1225 0020 00000000 		.4byte	.LFB4
 1226 0024 0C000000 		.4byte	.LFE4-.LFB4
 1227 0028 00000000 		.4byte	.LFB5
 1228 002c 14000000 		.4byte	.LFE5-.LFB5
 1229 0030 00000000 		.4byte	.LFB7
 1230 0034 0C000000 		.4byte	.LFE7-.LFB7
 1231 0038 00000000 		.4byte	.LFB8
 1232 003c 0C000000 		.4byte	.LFE8-.LFB8
 1233 0040 00000000 		.4byte	.LFB9
 1234 0044 0C000000 		.4byte	.LFE9-.LFB9
 1235 0048 00000000 		.4byte	.LFB10
 1236 004c 0C000000 		.4byte	.LFE10-.LFB10
 1237 0050 00000000 		.4byte	.LFB11
 1238 0054 0C000000 		.4byte	.LFE11-.LFB11
 1239 0058 00000000 		.4byte	.LFB12
 1240 005c 0C000000 		.4byte	.LFE12-.LFB12
 1241 0060 00000000 		.4byte	.LFB13
 1242 0064 0C000000 		.4byte	.LFE13-.LFB13
 1243 0068 00000000 		.4byte	.LFB6
 1244 006c 14000000 		.4byte	.LFE6-.LFB6
 1245 0070 00000000 		.4byte	.LFB1
 1246 0074 64000000 		.4byte	.LFE1-.LFB1
 1247 0078 00000000 		.4byte	.LFB0
 1248 007c 1C000000 		.4byte	.LFE0-.LFB0
 1249 0080 00000000 		.4byte	.LFB14
 1250 0084 0C000000 		.4byte	.LFE14-.LFB14
 1251 0088 00000000 		.4byte	.LFB15
 1252 008c 0C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 39


 1253 0090 00000000 		.4byte	0
 1254 0094 00000000 		.4byte	0
 1255              		.section	.debug_ranges,"",%progbits
 1256              	.Ldebug_ranges0:
 1257 0000 00000000 		.4byte	.LFB2
 1258 0004 10000000 		.4byte	.LFE2
 1259 0008 00000000 		.4byte	.LFB3
 1260 000c 10000000 		.4byte	.LFE3
 1261 0010 00000000 		.4byte	.LFB4
 1262 0014 0C000000 		.4byte	.LFE4
 1263 0018 00000000 		.4byte	.LFB5
 1264 001c 14000000 		.4byte	.LFE5
 1265 0020 00000000 		.4byte	.LFB7
 1266 0024 0C000000 		.4byte	.LFE7
 1267 0028 00000000 		.4byte	.LFB8
 1268 002c 0C000000 		.4byte	.LFE8
 1269 0030 00000000 		.4byte	.LFB9
 1270 0034 0C000000 		.4byte	.LFE9
 1271 0038 00000000 		.4byte	.LFB10
 1272 003c 0C000000 		.4byte	.LFE10
 1273 0040 00000000 		.4byte	.LFB11
 1274 0044 0C000000 		.4byte	.LFE11
 1275 0048 00000000 		.4byte	.LFB12
 1276 004c 0C000000 		.4byte	.LFE12
 1277 0050 00000000 		.4byte	.LFB13
 1278 0054 0C000000 		.4byte	.LFE13
 1279 0058 00000000 		.4byte	.LFB6
 1280 005c 14000000 		.4byte	.LFE6
 1281 0060 00000000 		.4byte	.LFB1
 1282 0064 64000000 		.4byte	.LFE1
 1283 0068 00000000 		.4byte	.LFB0
 1284 006c 1C000000 		.4byte	.LFE0
 1285 0070 00000000 		.4byte	.LFB14
 1286 0074 0C000000 		.4byte	.LFE14
 1287 0078 00000000 		.4byte	.LFB15
 1288 007c 0C000000 		.4byte	.LFE15
 1289 0080 00000000 		.4byte	0
 1290 0084 00000000 		.4byte	0
 1291              		.section	.debug_line,"",%progbits
 1292              	.Ldebug_line0:
 1293 0000 8E010000 		.section	.debug_str,"MS",%progbits,1
 1293      02005700 
 1293      00000201 
 1293      FB0E0D00 
 1293      01010101 
 1294              	.LASF15:
 1295 0000 72656731 		.ascii	"reg16\000"
 1295      3600
 1296              	.LASF13:
 1297 0006 63686172 		.ascii	"char\000"
 1297      00
 1298              	.LASF35:
 1299 000b 72657375 		.ascii	"result\000"
 1299      6C7400
 1300              	.LASF40:
 1301 0012 50574D5F 		.ascii	"PWM_ColorSensor_ReadPeriod\000"
 1301      436F6C6F 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 40


 1301      7253656E 
 1301      736F725F 
 1301      52656164 
 1302              	.LASF23:
 1303 002d 70657269 		.ascii	"period\000"
 1303      6F6400
 1304              	.LASF3:
 1305 0034 73686F72 		.ascii	"short unsigned int\000"
 1305      7420756E 
 1305      7369676E 
 1305      65642069 
 1305      6E7400
 1306              	.LASF32:
 1307 0047 50574D5F 		.ascii	"PWM_ColorSensor_ReadCapture\000"
 1307      436F6C6F 
 1307      7253656E 
 1307      736F725F 
 1307      52656164 
 1308              	.LASF38:
 1309 0063 50574D5F 		.ascii	"PWM_ColorSensor_Start\000"
 1309      436F6C6F 
 1309      7253656E 
 1309      736F725F 
 1309      53746172 
 1310              	.LASF34:
 1311 0079 50574D5F 		.ascii	"PWM_ColorSensor_Init\000"
 1311      436F6C6F 
 1311      7253656E 
 1311      736F725F 
 1311      496E6974 
 1312              	.LASF11:
 1313 008e 666C6F61 		.ascii	"float\000"
 1313      7400
 1314              	.LASF22:
 1315 0094 636F756E 		.ascii	"counter\000"
 1315      74657200 
 1316              	.LASF7:
 1317 009c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1317      206C6F6E 
 1317      6720756E 
 1317      7369676E 
 1317      65642069 
 1318              	.LASF30:
 1319 00b3 50574D5F 		.ascii	"PWM_ColorSensor_WriteControlRegister\000"
 1319      436F6C6F 
 1319      7253656E 
 1319      736F725F 
 1319      57726974 
 1320              	.LASF1:
 1321 00d8 756E7369 		.ascii	"unsigned char\000"
 1321      676E6564 
 1321      20636861 
 1321      7200
 1322              	.LASF43:
 1323 00e6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1323      43313120 
 1323      352E342E 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 41


 1323      31203230 
 1323      31363036 
 1324 0119 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1324      20726576 
 1324      6973696F 
 1324      6E203233 
 1324      37373135 
 1325 014c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1325      66756E63 
 1325      74696F6E 
 1325      2D736563 
 1325      74696F6E 
 1326              	.LASF14:
 1327 0174 72656738 		.ascii	"reg8\000"
 1327      00
 1328              	.LASF5:
 1329 0179 6C6F6E67 		.ascii	"long unsigned int\000"
 1329      20756E73 
 1329      69676E65 
 1329      6420696E 
 1329      7400
 1330              	.LASF9:
 1331 018b 75696E74 		.ascii	"uint8\000"
 1331      3800
 1332              	.LASF31:
 1333 0191 636F6E74 		.ascii	"control\000"
 1333      726F6C00 
 1334              	.LASF33:
 1335 0199 50574D5F 		.ascii	"PWM_ColorSensor_ClearFIFO\000"
 1335      436F6C6F 
 1335      7253656E 
 1335      736F725F 
 1335      436C6561 
 1336              	.LASF47:
 1337 01b3 50574D5F 		.ascii	"PWM_ColorSensor_initVar\000"
 1337      436F6C6F 
 1337      7253656E 
 1337      736F725F 
 1337      696E6974 
 1338              	.LASF39:
 1339 01cb 50574D5F 		.ascii	"PWM_ColorSensor_ReadCompare\000"
 1339      436F6C6F 
 1339      7253656E 
 1339      736F725F 
 1339      52656164 
 1340              	.LASF29:
 1341 01e7 50574D5F 		.ascii	"PWM_ColorSensor_ReadStatusRegister\000"
 1341      436F6C6F 
 1341      7253656E 
 1341      736F725F 
 1341      52656164 
 1342              	.LASF12:
 1343 020a 646F7562 		.ascii	"double\000"
 1343      6C6500
 1344              	.LASF26:
 1345 0211 50574D5F 		.ascii	"PWM_ColorSensor_SetInterruptMode\000"
 1345      436F6C6F 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 42


 1345      7253656E 
 1345      736F725F 
 1345      53657449 
 1346              	.LASF28:
 1347 0232 50574D5F 		.ascii	"PWM_ColorSensor_ReadCounter\000"
 1347      436F6C6F 
 1347      7253656E 
 1347      736F725F 
 1347      52656164 
 1348              	.LASF10:
 1349 024e 75696E74 		.ascii	"uint16\000"
 1349      313600
 1350              	.LASF44:
 1351 0255 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_ColorSensor.c\000"
 1351      72617465 
 1351      645F536F 
 1351      75726365 
 1351      5C50536F 
 1352              	.LASF24:
 1353 027e 50574D5F 		.ascii	"PWM_ColorSensor_WriteCompare\000"
 1353      436F6C6F 
 1353      7253656E 
 1353      736F725F 
 1353      57726974 
 1354              	.LASF41:
 1355 029b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1355      74657243 
 1355      72697469 
 1355      63616C53 
 1355      65637469 
 1356              	.LASF8:
 1357 02b2 756E7369 		.ascii	"unsigned int\000"
 1357      676E6564 
 1357      20696E74 
 1357      00
 1358              	.LASF19:
 1359 02bf 50574D5F 		.ascii	"PWM_ColorSensor_Stop\000"
 1359      436F6C6F 
 1359      7253656E 
 1359      736F725F 
 1359      53746F70 
 1360              	.LASF42:
 1361 02d4 43794578 		.ascii	"CyExitCriticalSection\000"
 1361      69744372 
 1361      69746963 
 1361      616C5365 
 1361      6374696F 
 1362              	.LASF46:
 1363 02ea 50574D5F 		.ascii	"PWM_ColorSensor_ReadControlRegister\000"
 1363      436F6C6F 
 1363      7253656E 
 1363      736F725F 
 1363      52656164 
 1364              	.LASF45:
 1365 030e 433A5C55 		.ascii	"C:\\Users\\weiro\\code repository for ece4191\\ece4"
 1365      73657273 
 1365      5C776569 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 43


 1365      726F5C63 
 1365      6F646520 
 1366 033d 3139315C 		.ascii	"191\\DC_Motor_1\\Design01.cydsn\000"
 1366      44435F4D 
 1366      6F746F72 
 1366      5F315C44 
 1366      65736967 
 1367              	.LASF36:
 1368 035b 6374726C 		.ascii	"ctrl\000"
 1368      00
 1369              	.LASF21:
 1370 0360 50574D5F 		.ascii	"PWM_ColorSensor_WritePeriod\000"
 1370      436F6C6F 
 1370      7253656E 
 1370      736F725F 
 1370      57726974 
 1371              	.LASF17:
 1372 037c 73697A65 		.ascii	"sizetype\000"
 1372      74797065 
 1372      00
 1373              	.LASF6:
 1374 0385 6C6F6E67 		.ascii	"long long int\000"
 1374      206C6F6E 
 1374      6720696E 
 1374      7400
 1375              	.LASF27:
 1376 0393 696E7465 		.ascii	"interruptMode\000"
 1376      72727570 
 1376      744D6F64 
 1376      6500
 1377              	.LASF2:
 1378 03a1 73686F72 		.ascii	"short int\000"
 1378      7420696E 
 1378      7400
 1379              	.LASF4:
 1380 03ab 6C6F6E67 		.ascii	"long int\000"
 1380      20696E74 
 1380      00
 1381              	.LASF18:
 1382 03b4 50574D5F 		.ascii	"PWM_ColorSensor_Enable\000"
 1382      436F6C6F 
 1382      7253656E 
 1382      736F725F 
 1382      456E6162 
 1383              	.LASF20:
 1384 03cb 50574D5F 		.ascii	"PWM_ColorSensor_WriteCounter\000"
 1384      436F6C6F 
 1384      7253656E 
 1384      736F725F 
 1384      57726974 
 1385              	.LASF16:
 1386 03e8 6C6F6E67 		.ascii	"long double\000"
 1386      20646F75 
 1386      626C6500 
 1387              	.LASF0:
 1388 03f4 7369676E 		.ascii	"signed char\000"
 1388      65642063 
ARM GAS  C:\Users\weiro\AppData\Local\Temp\cc0PQjAZ.s 			page 44


 1388      68617200 
 1389              	.LASF25:
 1390 0400 636F6D70 		.ascii	"compare\000"
 1390      61726500 
 1391              	.LASF37:
 1392 0408 50574D5F 		.ascii	"PWM_ColorSensor_interruptState\000"
 1392      436F6C6F 
 1392      7253656E 
 1392      736F725F 
 1392      696E7465 
 1393              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
